// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_UI_Input_Core_2_H
#define WINRT_Windows_UI_Input_Core_2_H
#include "winrt/impl/Windows.ApplicationModel.Core.1.h"
#include "winrt/impl/Windows.UI.Input.Core.1.h"
WINRT_EXPORT namespace winrt::Windows::UI::Input::Core {
  struct __declspec(empty_bases) RadialControllerIndependentInputSource
      : winrt::Windows::UI::Input::Core::
            IRadialControllerIndependentInputSource,
        impl::require<RadialControllerIndependentInputSource,
                      winrt::Windows::UI::Input::Core::
                          IRadialControllerIndependentInputSource2> {
    RadialControllerIndependentInputSource(std::nullptr_t) noexcept {}
    RadialControllerIndependentInputSource(void* ptr,
                                           take_ownership_from_abi_t) noexcept
        : winrt::Windows::UI::Input::Core::
              IRadialControllerIndependentInputSource(
                  ptr, take_ownership_from_abi) {}
    RadialControllerIndependentInputSource(
        RadialControllerIndependentInputSource const&) noexcept = default;
    RadialControllerIndependentInputSource(
        RadialControllerIndependentInputSource&&) noexcept = default;
    RadialControllerIndependentInputSource& operator=(
        RadialControllerIndependentInputSource const&) & noexcept = default;
    RadialControllerIndependentInputSource& operator=(
        RadialControllerIndependentInputSource&&) & noexcept = default;
    static auto CreateForView(
        winrt::Windows::ApplicationModel::Core::CoreApplicationView const&
            view);
  };
}
#endif
