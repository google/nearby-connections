// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_System_Preview_1_H
#define WINRT_Windows_System_Preview_1_H
#include "winrt/impl/Windows.System.Preview.0.h"
WINRT_EXPORT namespace winrt::Windows::System::Preview {
  struct __declspec(empty_bases) ITwoPanelHingedDevicePosturePreview
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITwoPanelHingedDevicePosturePreview> {
    ITwoPanelHingedDevicePosturePreview(std::nullptr_t = nullptr) noexcept {}
    ITwoPanelHingedDevicePosturePreview(void* ptr,
                                        take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    ITwoPanelHingedDevicePosturePreview(
        ITwoPanelHingedDevicePosturePreview const&) noexcept = default;
    ITwoPanelHingedDevicePosturePreview(
        ITwoPanelHingedDevicePosturePreview&&) noexcept = default;
    ITwoPanelHingedDevicePosturePreview& operator=(
        ITwoPanelHingedDevicePosturePreview const&) & noexcept = default;
    ITwoPanelHingedDevicePosturePreview& operator=(
        ITwoPanelHingedDevicePosturePreview&&) & noexcept = default;
  };
  struct __declspec(empty_bases) ITwoPanelHingedDevicePosturePreviewReading
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITwoPanelHingedDevicePosturePreviewReading> {
    ITwoPanelHingedDevicePosturePreviewReading(
        std::nullptr_t = nullptr) noexcept {}
    ITwoPanelHingedDevicePosturePreviewReading(
        void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    ITwoPanelHingedDevicePosturePreviewReading(
        ITwoPanelHingedDevicePosturePreviewReading const&) noexcept = default;
    ITwoPanelHingedDevicePosturePreviewReading(
        ITwoPanelHingedDevicePosturePreviewReading&&) noexcept = default;
    ITwoPanelHingedDevicePosturePreviewReading& operator=(
        ITwoPanelHingedDevicePosturePreviewReading const&) & noexcept = default;
    ITwoPanelHingedDevicePosturePreviewReading& operator=(
        ITwoPanelHingedDevicePosturePreviewReading&&) & noexcept = default;
  };
  struct __declspec(empty_bases)
      ITwoPanelHingedDevicePosturePreviewReadingChangedEventArgs
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<
            ITwoPanelHingedDevicePosturePreviewReadingChangedEventArgs> {
    ITwoPanelHingedDevicePosturePreviewReadingChangedEventArgs(
        std::nullptr_t = nullptr) noexcept {}
    ITwoPanelHingedDevicePosturePreviewReadingChangedEventArgs(
        void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    ITwoPanelHingedDevicePosturePreviewReadingChangedEventArgs(
        ITwoPanelHingedDevicePosturePreviewReadingChangedEventArgs const&) noexcept =
        default;
    ITwoPanelHingedDevicePosturePreviewReadingChangedEventArgs(
        ITwoPanelHingedDevicePosturePreviewReadingChangedEventArgs&&) noexcept =
        default;
    ITwoPanelHingedDevicePosturePreviewReadingChangedEventArgs& operator=(
        ITwoPanelHingedDevicePosturePreviewReadingChangedEventArgs const&) & noexcept =
        default;
    ITwoPanelHingedDevicePosturePreviewReadingChangedEventArgs& operator=(
        ITwoPanelHingedDevicePosturePreviewReadingChangedEventArgs&&) & noexcept =
        default;
  };
  struct __declspec(empty_bases) ITwoPanelHingedDevicePosturePreviewStatics
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITwoPanelHingedDevicePosturePreviewStatics> {
    ITwoPanelHingedDevicePosturePreviewStatics(
        std::nullptr_t = nullptr) noexcept {}
    ITwoPanelHingedDevicePosturePreviewStatics(
        void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    ITwoPanelHingedDevicePosturePreviewStatics(
        ITwoPanelHingedDevicePosturePreviewStatics const&) noexcept = default;
    ITwoPanelHingedDevicePosturePreviewStatics(
        ITwoPanelHingedDevicePosturePreviewStatics&&) noexcept = default;
    ITwoPanelHingedDevicePosturePreviewStatics& operator=(
        ITwoPanelHingedDevicePosturePreviewStatics const&) & noexcept = default;
    ITwoPanelHingedDevicePosturePreviewStatics& operator=(
        ITwoPanelHingedDevicePosturePreviewStatics&&) & noexcept = default;
  };
}
#endif
