// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_Security_Authentication_Web_1_H
#define WINRT_Windows_Security_Authentication_Web_1_H
#include "winrt/impl/Windows.Security.Authentication.Web.0.h"
WINRT_EXPORT namespace winrt::Windows::Security::Authentication::Web {
  struct __declspec(empty_bases) IWebAuthenticationBrokerStatics
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebAuthenticationBrokerStatics> {
    IWebAuthenticationBrokerStatics(std::nullptr_t = nullptr) noexcept {}
    IWebAuthenticationBrokerStatics(void* ptr,
                                    take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IWebAuthenticationBrokerStatics(
        IWebAuthenticationBrokerStatics const&) noexcept = default;
    IWebAuthenticationBrokerStatics(
        IWebAuthenticationBrokerStatics&&) noexcept = default;
    IWebAuthenticationBrokerStatics& operator=(
        IWebAuthenticationBrokerStatics const&) & noexcept = default;
    IWebAuthenticationBrokerStatics& operator=(
        IWebAuthenticationBrokerStatics&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IWebAuthenticationBrokerStatics2
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebAuthenticationBrokerStatics2> {
    IWebAuthenticationBrokerStatics2(std::nullptr_t = nullptr) noexcept {}
    IWebAuthenticationBrokerStatics2(void* ptr,
                                     take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IWebAuthenticationBrokerStatics2(
        IWebAuthenticationBrokerStatics2 const&) noexcept = default;
    IWebAuthenticationBrokerStatics2(
        IWebAuthenticationBrokerStatics2&&) noexcept = default;
    IWebAuthenticationBrokerStatics2& operator=(
        IWebAuthenticationBrokerStatics2 const&) & noexcept = default;
    IWebAuthenticationBrokerStatics2& operator=(
        IWebAuthenticationBrokerStatics2&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IWebAuthenticationResult
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWebAuthenticationResult> {
    IWebAuthenticationResult(std::nullptr_t = nullptr) noexcept {}
    IWebAuthenticationResult(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IWebAuthenticationResult(IWebAuthenticationResult const&) noexcept =
        default;
    IWebAuthenticationResult(IWebAuthenticationResult&&) noexcept = default;
    IWebAuthenticationResult& operator=(
        IWebAuthenticationResult const&) & noexcept = default;
    IWebAuthenticationResult& operator=(IWebAuthenticationResult&&) & noexcept =
        default;
  };
}
#endif
