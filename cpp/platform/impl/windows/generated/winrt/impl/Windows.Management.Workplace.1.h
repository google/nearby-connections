// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_Management_Workplace_1_H
#define WINRT_Windows_Management_Workplace_1_H
#include "winrt/impl/Windows.Management.Workplace.0.h"
WINRT_EXPORT namespace winrt::Windows::Management::Workplace {
  struct __declspec(empty_bases) IMdmAllowPolicyStatics
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMdmAllowPolicyStatics> {
    IMdmAllowPolicyStatics(std::nullptr_t = nullptr) noexcept {}
    IMdmAllowPolicyStatics(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IMdmAllowPolicyStatics(IMdmAllowPolicyStatics const&) noexcept = default;
    IMdmAllowPolicyStatics(IMdmAllowPolicyStatics&&) noexcept = default;
    IMdmAllowPolicyStatics& operator=(
        IMdmAllowPolicyStatics const&) & noexcept = default;
    IMdmAllowPolicyStatics& operator=(IMdmAllowPolicyStatics&&) & noexcept =
        default;
  };
  struct __declspec(empty_bases) IMdmPolicyStatics2
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMdmPolicyStatics2> {
    IMdmPolicyStatics2(std::nullptr_t = nullptr) noexcept {}
    IMdmPolicyStatics2(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IMdmPolicyStatics2(IMdmPolicyStatics2 const&) noexcept = default;
    IMdmPolicyStatics2(IMdmPolicyStatics2&&) noexcept = default;
    IMdmPolicyStatics2& operator=(IMdmPolicyStatics2 const&) & noexcept =
        default;
    IMdmPolicyStatics2& operator=(IMdmPolicyStatics2&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IWorkplaceSettingsStatics
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWorkplaceSettingsStatics> {
    IWorkplaceSettingsStatics(std::nullptr_t = nullptr) noexcept {}
    IWorkplaceSettingsStatics(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IWorkplaceSettingsStatics(IWorkplaceSettingsStatics const&) noexcept =
        default;
    IWorkplaceSettingsStatics(IWorkplaceSettingsStatics&&) noexcept = default;
    IWorkplaceSettingsStatics& operator=(
        IWorkplaceSettingsStatics const&) & noexcept = default;
    IWorkplaceSettingsStatics& operator=(
        IWorkplaceSettingsStatics&&) & noexcept = default;
  };
}
#endif
