// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_UI_Input_Inking_Core_2_H
#define WINRT_Windows_UI_Input_Inking_Core_2_H
#include "winrt/impl/Windows.Foundation.Numerics.1.h"
#include "winrt/impl/Windows.UI.Input.Inking.1.h"
#include "winrt/impl/Windows.UI.Input.Inking.Core.1.h"
WINRT_EXPORT namespace winrt::Windows::UI::Input::Inking::Core {
  struct __declspec(empty_bases) CoreIncrementalInkStroke
      : winrt::Windows::UI::Input::Inking::Core::ICoreIncrementalInkStroke {
    CoreIncrementalInkStroke(std::nullptr_t) noexcept {}
    CoreIncrementalInkStroke(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::UI::Input::Inking::Core::ICoreIncrementalInkStroke(
              ptr, take_ownership_from_abi) {}
    CoreIncrementalInkStroke(
        winrt::Windows::UI::Input::Inking::InkDrawingAttributes const&
            drawingAttributes,
        winrt::Windows::Foundation::Numerics::float3x2 const& pointTransform);
    CoreIncrementalInkStroke(CoreIncrementalInkStroke const&) noexcept =
        default;
    CoreIncrementalInkStroke(CoreIncrementalInkStroke&&) noexcept = default;
    CoreIncrementalInkStroke& operator=(
        CoreIncrementalInkStroke const&) & noexcept = default;
    CoreIncrementalInkStroke& operator=(CoreIncrementalInkStroke&&) & noexcept =
        default;
  };
  struct __declspec(empty_bases) CoreInkIndependentInputSource
      : winrt::Windows::UI::Input::Inking::Core::
            ICoreInkIndependentInputSource {
    CoreInkIndependentInputSource(std::nullptr_t) noexcept {}
    CoreInkIndependentInputSource(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::UI::Input::Inking::Core::
              ICoreInkIndependentInputSource(ptr, take_ownership_from_abi) {}
    CoreInkIndependentInputSource(
        CoreInkIndependentInputSource const&) noexcept = default;
    CoreInkIndependentInputSource(CoreInkIndependentInputSource&&) noexcept =
        default;
    CoreInkIndependentInputSource& operator=(
        CoreInkIndependentInputSource const&) & noexcept = default;
    CoreInkIndependentInputSource& operator=(
        CoreInkIndependentInputSource&&) & noexcept = default;
    static auto Create(
        winrt::Windows::UI::Input::Inking::InkPresenter const& inkPresenter);
  };
  struct __declspec(empty_bases) CoreInkPresenterHost
      : winrt::Windows::UI::Input::Inking::Core::ICoreInkPresenterHost {
    CoreInkPresenterHost(std::nullptr_t) noexcept {}
    CoreInkPresenterHost(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::UI::Input::Inking::Core::ICoreInkPresenterHost(
              ptr, take_ownership_from_abi) {}
    CoreInkPresenterHost();
    CoreInkPresenterHost(CoreInkPresenterHost const&) noexcept = default;
    CoreInkPresenterHost(CoreInkPresenterHost&&) noexcept = default;
    CoreInkPresenterHost& operator=(CoreInkPresenterHost const&) & noexcept =
        default;
    CoreInkPresenterHost& operator=(CoreInkPresenterHost&&) & noexcept =
        default;
  };
  struct __declspec(empty_bases) CoreWetStrokeUpdateEventArgs
      : winrt::Windows::UI::Input::Inking::Core::ICoreWetStrokeUpdateEventArgs {
    CoreWetStrokeUpdateEventArgs(std::nullptr_t) noexcept {}
    CoreWetStrokeUpdateEventArgs(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::UI::Input::Inking::Core::
              ICoreWetStrokeUpdateEventArgs(ptr, take_ownership_from_abi) {}
    CoreWetStrokeUpdateEventArgs(CoreWetStrokeUpdateEventArgs const&) noexcept =
        default;
    CoreWetStrokeUpdateEventArgs(CoreWetStrokeUpdateEventArgs&&) noexcept =
        default;
    CoreWetStrokeUpdateEventArgs& operator=(
        CoreWetStrokeUpdateEventArgs const&) & noexcept = default;
    CoreWetStrokeUpdateEventArgs& operator=(
        CoreWetStrokeUpdateEventArgs&&) & noexcept = default;
  };
  struct __declspec(empty_bases) CoreWetStrokeUpdateSource
      : winrt::Windows::UI::Input::Inking::Core::ICoreWetStrokeUpdateSource {
    CoreWetStrokeUpdateSource(std::nullptr_t) noexcept {}
    CoreWetStrokeUpdateSource(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::UI::Input::Inking::Core::ICoreWetStrokeUpdateSource(
              ptr, take_ownership_from_abi) {}
    CoreWetStrokeUpdateSource(CoreWetStrokeUpdateSource const&) noexcept =
        default;
    CoreWetStrokeUpdateSource(CoreWetStrokeUpdateSource&&) noexcept = default;
    CoreWetStrokeUpdateSource& operator=(
        CoreWetStrokeUpdateSource const&) & noexcept = default;
    CoreWetStrokeUpdateSource& operator=(
        CoreWetStrokeUpdateSource&&) & noexcept = default;
    static auto Create(
        winrt::Windows::UI::Input::Inking::InkPresenter const& inkPresenter);
  };
}
#endif
