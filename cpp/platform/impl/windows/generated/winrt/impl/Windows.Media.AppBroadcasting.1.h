// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_Media_AppBroadcasting_1_H
#define WINRT_Windows_Media_AppBroadcasting_1_H
#include "winrt/impl/Windows.Media.AppBroadcasting.0.h"
WINRT_EXPORT namespace winrt::Windows::Media::AppBroadcasting {
  struct __declspec(empty_bases) IAppBroadcastingMonitor
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBroadcastingMonitor> {
    IAppBroadcastingMonitor(std::nullptr_t = nullptr) noexcept {}
    IAppBroadcastingMonitor(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IAppBroadcastingMonitor(IAppBroadcastingMonitor const&) noexcept = default;
    IAppBroadcastingMonitor(IAppBroadcastingMonitor&&) noexcept = default;
    IAppBroadcastingMonitor& operator=(
        IAppBroadcastingMonitor const&) & noexcept = default;
    IAppBroadcastingMonitor& operator=(IAppBroadcastingMonitor&&) & noexcept =
        default;
  };
  struct __declspec(empty_bases) IAppBroadcastingStatus
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBroadcastingStatus> {
    IAppBroadcastingStatus(std::nullptr_t = nullptr) noexcept {}
    IAppBroadcastingStatus(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IAppBroadcastingStatus(IAppBroadcastingStatus const&) noexcept = default;
    IAppBroadcastingStatus(IAppBroadcastingStatus&&) noexcept = default;
    IAppBroadcastingStatus& operator=(
        IAppBroadcastingStatus const&) & noexcept = default;
    IAppBroadcastingStatus& operator=(IAppBroadcastingStatus&&) & noexcept =
        default;
  };
  struct __declspec(empty_bases) IAppBroadcastingStatusDetails
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBroadcastingStatusDetails> {
    IAppBroadcastingStatusDetails(std::nullptr_t = nullptr) noexcept {}
    IAppBroadcastingStatusDetails(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IAppBroadcastingStatusDetails(
        IAppBroadcastingStatusDetails const&) noexcept = default;
    IAppBroadcastingStatusDetails(IAppBroadcastingStatusDetails&&) noexcept =
        default;
    IAppBroadcastingStatusDetails& operator=(
        IAppBroadcastingStatusDetails const&) & noexcept = default;
    IAppBroadcastingStatusDetails& operator=(
        IAppBroadcastingStatusDetails&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IAppBroadcastingUI
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBroadcastingUI> {
    IAppBroadcastingUI(std::nullptr_t = nullptr) noexcept {}
    IAppBroadcastingUI(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IAppBroadcastingUI(IAppBroadcastingUI const&) noexcept = default;
    IAppBroadcastingUI(IAppBroadcastingUI&&) noexcept = default;
    IAppBroadcastingUI& operator=(IAppBroadcastingUI const&) & noexcept =
        default;
    IAppBroadcastingUI& operator=(IAppBroadcastingUI&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IAppBroadcastingUIStatics
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppBroadcastingUIStatics> {
    IAppBroadcastingUIStatics(std::nullptr_t = nullptr) noexcept {}
    IAppBroadcastingUIStatics(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IAppBroadcastingUIStatics(IAppBroadcastingUIStatics const&) noexcept =
        default;
    IAppBroadcastingUIStatics(IAppBroadcastingUIStatics&&) noexcept = default;
    IAppBroadcastingUIStatics& operator=(
        IAppBroadcastingUIStatics const&) & noexcept = default;
    IAppBroadcastingUIStatics& operator=(
        IAppBroadcastingUIStatics&&) & noexcept = default;
  };
}
#endif
