// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_Perception_Spatial_Surfaces_2_H
#define WINRT_Windows_Perception_Spatial_Surfaces_2_H
#include "winrt/impl/Windows.Perception.Spatial.Surfaces.1.h"
WINRT_EXPORT namespace winrt::Windows::Perception::Spatial::Surfaces {
  struct __declspec(empty_bases) SpatialSurfaceInfo
      : winrt::Windows::Perception::Spatial::Surfaces::ISpatialSurfaceInfo {
    SpatialSurfaceInfo(std::nullptr_t) noexcept {}
    SpatialSurfaceInfo(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Perception::Spatial::Surfaces::ISpatialSurfaceInfo(
              ptr, take_ownership_from_abi) {}
    SpatialSurfaceInfo(SpatialSurfaceInfo const&) noexcept = default;
    SpatialSurfaceInfo(SpatialSurfaceInfo&&) noexcept = default;
    SpatialSurfaceInfo& operator=(SpatialSurfaceInfo const&) & noexcept =
        default;
    SpatialSurfaceInfo& operator=(SpatialSurfaceInfo&&) & noexcept = default;
  };
  struct __declspec(empty_bases) SpatialSurfaceMesh
      : winrt::Windows::Perception::Spatial::Surfaces::ISpatialSurfaceMesh {
    SpatialSurfaceMesh(std::nullptr_t) noexcept {}
    SpatialSurfaceMesh(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Perception::Spatial::Surfaces::ISpatialSurfaceMesh(
              ptr, take_ownership_from_abi) {}
    SpatialSurfaceMesh(SpatialSurfaceMesh const&) noexcept = default;
    SpatialSurfaceMesh(SpatialSurfaceMesh&&) noexcept = default;
    SpatialSurfaceMesh& operator=(SpatialSurfaceMesh const&) & noexcept =
        default;
    SpatialSurfaceMesh& operator=(SpatialSurfaceMesh&&) & noexcept = default;
  };
  struct __declspec(empty_bases) SpatialSurfaceMeshBuffer
      : winrt::Windows::Perception::Spatial::Surfaces::
            ISpatialSurfaceMeshBuffer {
    SpatialSurfaceMeshBuffer(std::nullptr_t) noexcept {}
    SpatialSurfaceMeshBuffer(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Perception::Spatial::Surfaces::
              ISpatialSurfaceMeshBuffer(ptr, take_ownership_from_abi) {}
    SpatialSurfaceMeshBuffer(SpatialSurfaceMeshBuffer const&) noexcept =
        default;
    SpatialSurfaceMeshBuffer(SpatialSurfaceMeshBuffer&&) noexcept = default;
    SpatialSurfaceMeshBuffer& operator=(
        SpatialSurfaceMeshBuffer const&) & noexcept = default;
    SpatialSurfaceMeshBuffer& operator=(SpatialSurfaceMeshBuffer&&) & noexcept =
        default;
  };
  struct __declspec(empty_bases) SpatialSurfaceMeshOptions
      : winrt::Windows::Perception::Spatial::Surfaces::
            ISpatialSurfaceMeshOptions {
    SpatialSurfaceMeshOptions(std::nullptr_t) noexcept {}
    SpatialSurfaceMeshOptions(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Perception::Spatial::Surfaces::
              ISpatialSurfaceMeshOptions(ptr, take_ownership_from_abi) {}
    SpatialSurfaceMeshOptions();
    SpatialSurfaceMeshOptions(SpatialSurfaceMeshOptions const&) noexcept =
        default;
    SpatialSurfaceMeshOptions(SpatialSurfaceMeshOptions&&) noexcept = default;
    SpatialSurfaceMeshOptions& operator=(
        SpatialSurfaceMeshOptions const&) & noexcept = default;
    SpatialSurfaceMeshOptions& operator=(
        SpatialSurfaceMeshOptions&&) & noexcept = default;
    [[nodiscard]] static auto SupportedVertexPositionFormats();
    [[nodiscard]] static auto SupportedTriangleIndexFormats();
    [[nodiscard]] static auto SupportedVertexNormalFormats();
  };
  struct __declspec(empty_bases) SpatialSurfaceObserver
      : winrt::Windows::Perception::Spatial::Surfaces::ISpatialSurfaceObserver {
    SpatialSurfaceObserver(std::nullptr_t) noexcept {}
    SpatialSurfaceObserver(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Perception::Spatial::Surfaces::
              ISpatialSurfaceObserver(ptr, take_ownership_from_abi) {}
    SpatialSurfaceObserver();
    SpatialSurfaceObserver(SpatialSurfaceObserver const&) noexcept = default;
    SpatialSurfaceObserver(SpatialSurfaceObserver&&) noexcept = default;
    SpatialSurfaceObserver& operator=(
        SpatialSurfaceObserver const&) & noexcept = default;
    SpatialSurfaceObserver& operator=(SpatialSurfaceObserver&&) & noexcept =
        default;
    static auto RequestAccessAsync();
    static auto IsSupported();
  };
}
#endif
