// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_UI_Xaml_Resources_1_H
#define WINRT_Windows_UI_Xaml_Resources_1_H
#include "winrt/impl/Windows.UI.Xaml.Resources.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Resources {
  struct __declspec(empty_bases) ICustomXamlResourceLoader
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomXamlResourceLoader> {
    ICustomXamlResourceLoader(std::nullptr_t = nullptr) noexcept {}
    ICustomXamlResourceLoader(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    ICustomXamlResourceLoader(ICustomXamlResourceLoader const&) noexcept =
        default;
    ICustomXamlResourceLoader(ICustomXamlResourceLoader&&) noexcept = default;
    ICustomXamlResourceLoader& operator=(
        ICustomXamlResourceLoader const&) & noexcept = default;
    ICustomXamlResourceLoader& operator=(
        ICustomXamlResourceLoader&&) & noexcept = default;
  };
  struct __declspec(empty_bases) ICustomXamlResourceLoaderFactory
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomXamlResourceLoaderFactory> {
    ICustomXamlResourceLoaderFactory(std::nullptr_t = nullptr) noexcept {}
    ICustomXamlResourceLoaderFactory(void* ptr,
                                     take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    ICustomXamlResourceLoaderFactory(
        ICustomXamlResourceLoaderFactory const&) noexcept = default;
    ICustomXamlResourceLoaderFactory(
        ICustomXamlResourceLoaderFactory&&) noexcept = default;
    ICustomXamlResourceLoaderFactory& operator=(
        ICustomXamlResourceLoaderFactory const&) & noexcept = default;
    ICustomXamlResourceLoaderFactory& operator=(
        ICustomXamlResourceLoaderFactory&&) & noexcept = default;
  };
  struct __declspec(empty_bases) ICustomXamlResourceLoaderOverrides
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomXamlResourceLoaderOverrides> {
    ICustomXamlResourceLoaderOverrides(std::nullptr_t = nullptr) noexcept {}
    ICustomXamlResourceLoaderOverrides(void* ptr,
                                       take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    ICustomXamlResourceLoaderOverrides(
        ICustomXamlResourceLoaderOverrides const&) noexcept = default;
    ICustomXamlResourceLoaderOverrides(
        ICustomXamlResourceLoaderOverrides&&) noexcept = default;
    ICustomXamlResourceLoaderOverrides& operator=(
        ICustomXamlResourceLoaderOverrides const&) & noexcept = default;
    ICustomXamlResourceLoaderOverrides& operator=(
        ICustomXamlResourceLoaderOverrides&&) & noexcept = default;
  };
  struct __declspec(empty_bases) ICustomXamlResourceLoaderStatics
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomXamlResourceLoaderStatics> {
    ICustomXamlResourceLoaderStatics(std::nullptr_t = nullptr) noexcept {}
    ICustomXamlResourceLoaderStatics(void* ptr,
                                     take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    ICustomXamlResourceLoaderStatics(
        ICustomXamlResourceLoaderStatics const&) noexcept = default;
    ICustomXamlResourceLoaderStatics(
        ICustomXamlResourceLoaderStatics&&) noexcept = default;
    ICustomXamlResourceLoaderStatics& operator=(
        ICustomXamlResourceLoaderStatics const&) & noexcept = default;
    ICustomXamlResourceLoaderStatics& operator=(
        ICustomXamlResourceLoaderStatics&&) & noexcept = default;
  };
}
#endif
