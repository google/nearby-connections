// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_Media_Capture_Core_2_H
#define WINRT_Windows_Media_Capture_Core_2_H
#include "winrt/impl/Windows.Media.Capture.Core.1.h"
WINRT_EXPORT namespace winrt::Windows::Media::Capture::Core {
  struct __declspec(empty_bases) VariablePhotoCapturedEventArgs
      : winrt::Windows::Media::Capture::Core::IVariablePhotoCapturedEventArgs {
    VariablePhotoCapturedEventArgs(std::nullptr_t) noexcept {}
    VariablePhotoCapturedEventArgs(void* ptr,
                                   take_ownership_from_abi_t) noexcept
        : winrt::Windows::Media::Capture::Core::IVariablePhotoCapturedEventArgs(
              ptr, take_ownership_from_abi) {}
    VariablePhotoCapturedEventArgs(
        VariablePhotoCapturedEventArgs const&) noexcept = default;
    VariablePhotoCapturedEventArgs(VariablePhotoCapturedEventArgs&&) noexcept =
        default;
    VariablePhotoCapturedEventArgs& operator=(
        VariablePhotoCapturedEventArgs const&) & noexcept = default;
    VariablePhotoCapturedEventArgs& operator=(
        VariablePhotoCapturedEventArgs&&) & noexcept = default;
  };
  struct __declspec(empty_bases) VariablePhotoSequenceCapture
      : winrt::Windows::Media::Capture::Core::IVariablePhotoSequenceCapture,
        impl::require<VariablePhotoSequenceCapture,
                      winrt::Windows::Media::Capture::Core::
                          IVariablePhotoSequenceCapture2> {
    VariablePhotoSequenceCapture(std::nullptr_t) noexcept {}
    VariablePhotoSequenceCapture(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Media::Capture::Core::IVariablePhotoSequenceCapture(
              ptr, take_ownership_from_abi) {}
    VariablePhotoSequenceCapture(VariablePhotoSequenceCapture const&) noexcept =
        default;
    VariablePhotoSequenceCapture(VariablePhotoSequenceCapture&&) noexcept =
        default;
    VariablePhotoSequenceCapture& operator=(
        VariablePhotoSequenceCapture const&) & noexcept = default;
    VariablePhotoSequenceCapture& operator=(
        VariablePhotoSequenceCapture&&) & noexcept = default;
  };
}
#endif
