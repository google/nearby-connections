// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_Security_Cryptography_2_H
#define WINRT_Windows_Security_Cryptography_2_H
#include "winrt/impl/Windows.Security.Cryptography.1.h"
#include "winrt/impl/Windows.Storage.Streams.1.h"
WINRT_EXPORT namespace winrt::Windows::Security::Cryptography {
  struct CryptographicBuffer {
    CryptographicBuffer() = delete;
    static auto Compare(
        winrt::Windows::Storage::Streams::IBuffer const& object1,
        winrt::Windows::Storage::Streams::IBuffer const& object2);
    static auto GenerateRandom(uint32_t length);
    static auto GenerateRandomNumber();
    static auto CreateFromByteArray(array_view<uint8_t const> value);
    static auto CopyToByteArray(
        winrt::Windows::Storage::Streams::IBuffer const& buffer,
        com_array<uint8_t>& value);
    static auto DecodeFromHexString(param::hstring const& value);
    static auto EncodeToHexString(
        winrt::Windows::Storage::Streams::IBuffer const& buffer);
    static auto DecodeFromBase64String(param::hstring const& value);
    static auto EncodeToBase64String(
        winrt::Windows::Storage::Streams::IBuffer const& buffer);
    static auto ConvertStringToBinary(
        param::hstring const& value,
        winrt::Windows::Security::Cryptography::BinaryStringEncoding const&
            encoding);
    static auto ConvertBinaryToString(
        winrt::Windows::Security::Cryptography::BinaryStringEncoding const&
            encoding,
        winrt::Windows::Storage::Streams::IBuffer const& buffer);
  };
}
#endif
