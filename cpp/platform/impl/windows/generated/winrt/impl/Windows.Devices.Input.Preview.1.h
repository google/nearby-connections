// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_Devices_Input_Preview_1_H
#define WINRT_Windows_Devices_Input_Preview_1_H
#include "winrt/impl/Windows.Devices.Input.Preview.0.h"
WINRT_EXPORT namespace winrt::Windows::Devices::Input::Preview {
  struct __declspec(empty_bases) IGazeDevicePreview
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGazeDevicePreview> {
    IGazeDevicePreview(std::nullptr_t = nullptr) noexcept {}
    IGazeDevicePreview(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IGazeDevicePreview(IGazeDevicePreview const&) noexcept = default;
    IGazeDevicePreview(IGazeDevicePreview&&) noexcept = default;
    IGazeDevicePreview& operator=(IGazeDevicePreview const&) & noexcept =
        default;
    IGazeDevicePreview& operator=(IGazeDevicePreview&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IGazeDeviceWatcherAddedPreviewEventArgs
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGazeDeviceWatcherAddedPreviewEventArgs> {
    IGazeDeviceWatcherAddedPreviewEventArgs(std::nullptr_t = nullptr) noexcept {
    }
    IGazeDeviceWatcherAddedPreviewEventArgs(void* ptr,
                                            take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IGazeDeviceWatcherAddedPreviewEventArgs(
        IGazeDeviceWatcherAddedPreviewEventArgs const&) noexcept = default;
    IGazeDeviceWatcherAddedPreviewEventArgs(
        IGazeDeviceWatcherAddedPreviewEventArgs&&) noexcept = default;
    IGazeDeviceWatcherAddedPreviewEventArgs& operator=(
        IGazeDeviceWatcherAddedPreviewEventArgs const&) & noexcept = default;
    IGazeDeviceWatcherAddedPreviewEventArgs& operator=(
        IGazeDeviceWatcherAddedPreviewEventArgs&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IGazeDeviceWatcherPreview
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGazeDeviceWatcherPreview> {
    IGazeDeviceWatcherPreview(std::nullptr_t = nullptr) noexcept {}
    IGazeDeviceWatcherPreview(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IGazeDeviceWatcherPreview(IGazeDeviceWatcherPreview const&) noexcept =
        default;
    IGazeDeviceWatcherPreview(IGazeDeviceWatcherPreview&&) noexcept = default;
    IGazeDeviceWatcherPreview& operator=(
        IGazeDeviceWatcherPreview const&) & noexcept = default;
    IGazeDeviceWatcherPreview& operator=(
        IGazeDeviceWatcherPreview&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IGazeDeviceWatcherRemovedPreviewEventArgs
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGazeDeviceWatcherRemovedPreviewEventArgs> {
    IGazeDeviceWatcherRemovedPreviewEventArgs(
        std::nullptr_t = nullptr) noexcept {}
    IGazeDeviceWatcherRemovedPreviewEventArgs(
        void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IGazeDeviceWatcherRemovedPreviewEventArgs(
        IGazeDeviceWatcherRemovedPreviewEventArgs const&) noexcept = default;
    IGazeDeviceWatcherRemovedPreviewEventArgs(
        IGazeDeviceWatcherRemovedPreviewEventArgs&&) noexcept = default;
    IGazeDeviceWatcherRemovedPreviewEventArgs& operator=(
        IGazeDeviceWatcherRemovedPreviewEventArgs const&) & noexcept = default;
    IGazeDeviceWatcherRemovedPreviewEventArgs& operator=(
        IGazeDeviceWatcherRemovedPreviewEventArgs&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IGazeDeviceWatcherUpdatedPreviewEventArgs
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGazeDeviceWatcherUpdatedPreviewEventArgs> {
    IGazeDeviceWatcherUpdatedPreviewEventArgs(
        std::nullptr_t = nullptr) noexcept {}
    IGazeDeviceWatcherUpdatedPreviewEventArgs(
        void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IGazeDeviceWatcherUpdatedPreviewEventArgs(
        IGazeDeviceWatcherUpdatedPreviewEventArgs const&) noexcept = default;
    IGazeDeviceWatcherUpdatedPreviewEventArgs(
        IGazeDeviceWatcherUpdatedPreviewEventArgs&&) noexcept = default;
    IGazeDeviceWatcherUpdatedPreviewEventArgs& operator=(
        IGazeDeviceWatcherUpdatedPreviewEventArgs const&) & noexcept = default;
    IGazeDeviceWatcherUpdatedPreviewEventArgs& operator=(
        IGazeDeviceWatcherUpdatedPreviewEventArgs&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IGazeEnteredPreviewEventArgs
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGazeEnteredPreviewEventArgs> {
    IGazeEnteredPreviewEventArgs(std::nullptr_t = nullptr) noexcept {}
    IGazeEnteredPreviewEventArgs(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IGazeEnteredPreviewEventArgs(IGazeEnteredPreviewEventArgs const&) noexcept =
        default;
    IGazeEnteredPreviewEventArgs(IGazeEnteredPreviewEventArgs&&) noexcept =
        default;
    IGazeEnteredPreviewEventArgs& operator=(
        IGazeEnteredPreviewEventArgs const&) & noexcept = default;
    IGazeEnteredPreviewEventArgs& operator=(
        IGazeEnteredPreviewEventArgs&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IGazeExitedPreviewEventArgs
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGazeExitedPreviewEventArgs> {
    IGazeExitedPreviewEventArgs(std::nullptr_t = nullptr) noexcept {}
    IGazeExitedPreviewEventArgs(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IGazeExitedPreviewEventArgs(IGazeExitedPreviewEventArgs const&) noexcept =
        default;
    IGazeExitedPreviewEventArgs(IGazeExitedPreviewEventArgs&&) noexcept =
        default;
    IGazeExitedPreviewEventArgs& operator=(
        IGazeExitedPreviewEventArgs const&) & noexcept = default;
    IGazeExitedPreviewEventArgs& operator=(
        IGazeExitedPreviewEventArgs&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IGazeInputSourcePreview
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGazeInputSourcePreview> {
    IGazeInputSourcePreview(std::nullptr_t = nullptr) noexcept {}
    IGazeInputSourcePreview(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IGazeInputSourcePreview(IGazeInputSourcePreview const&) noexcept = default;
    IGazeInputSourcePreview(IGazeInputSourcePreview&&) noexcept = default;
    IGazeInputSourcePreview& operator=(
        IGazeInputSourcePreview const&) & noexcept = default;
    IGazeInputSourcePreview& operator=(IGazeInputSourcePreview&&) & noexcept =
        default;
  };
  struct __declspec(empty_bases) IGazeInputSourcePreviewStatics
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGazeInputSourcePreviewStatics> {
    IGazeInputSourcePreviewStatics(std::nullptr_t = nullptr) noexcept {}
    IGazeInputSourcePreviewStatics(void* ptr,
                                   take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IGazeInputSourcePreviewStatics(
        IGazeInputSourcePreviewStatics const&) noexcept = default;
    IGazeInputSourcePreviewStatics(IGazeInputSourcePreviewStatics&&) noexcept =
        default;
    IGazeInputSourcePreviewStatics& operator=(
        IGazeInputSourcePreviewStatics const&) & noexcept = default;
    IGazeInputSourcePreviewStatics& operator=(
        IGazeInputSourcePreviewStatics&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IGazeMovedPreviewEventArgs
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGazeMovedPreviewEventArgs> {
    IGazeMovedPreviewEventArgs(std::nullptr_t = nullptr) noexcept {}
    IGazeMovedPreviewEventArgs(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IGazeMovedPreviewEventArgs(IGazeMovedPreviewEventArgs const&) noexcept =
        default;
    IGazeMovedPreviewEventArgs(IGazeMovedPreviewEventArgs&&) noexcept = default;
    IGazeMovedPreviewEventArgs& operator=(
        IGazeMovedPreviewEventArgs const&) & noexcept = default;
    IGazeMovedPreviewEventArgs& operator=(
        IGazeMovedPreviewEventArgs&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IGazePointPreview
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IGazePointPreview> {
    IGazePointPreview(std::nullptr_t = nullptr) noexcept {}
    IGazePointPreview(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IGazePointPreview(IGazePointPreview const&) noexcept = default;
    IGazePointPreview(IGazePointPreview&&) noexcept = default;
    IGazePointPreview& operator=(IGazePointPreview const&) & noexcept = default;
    IGazePointPreview& operator=(IGazePointPreview&&) & noexcept = default;
  };
}
#endif
