// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_Devices_Printers_Extensions_1_H
#define WINRT_Windows_Devices_Printers_Extensions_1_H
#include "winrt/impl/Windows.Devices.Printers.Extensions.0.h"
WINRT_EXPORT namespace winrt::Windows::Devices::Printers::Extensions {
  struct __declspec(empty_bases) IPrint3DWorkflow
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPrint3DWorkflow> {
    IPrint3DWorkflow(std::nullptr_t = nullptr) noexcept {}
    IPrint3DWorkflow(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IPrint3DWorkflow(IPrint3DWorkflow const&) noexcept = default;
    IPrint3DWorkflow(IPrint3DWorkflow&&) noexcept = default;
    IPrint3DWorkflow& operator=(IPrint3DWorkflow const&) & noexcept = default;
    IPrint3DWorkflow& operator=(IPrint3DWorkflow&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IPrint3DWorkflow2
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPrint3DWorkflow2> {
    IPrint3DWorkflow2(std::nullptr_t = nullptr) noexcept {}
    IPrint3DWorkflow2(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IPrint3DWorkflow2(IPrint3DWorkflow2 const&) noexcept = default;
    IPrint3DWorkflow2(IPrint3DWorkflow2&&) noexcept = default;
    IPrint3DWorkflow2& operator=(IPrint3DWorkflow2 const&) & noexcept = default;
    IPrint3DWorkflow2& operator=(IPrint3DWorkflow2&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IPrint3DWorkflowPrintRequestedEventArgs
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPrint3DWorkflowPrintRequestedEventArgs> {
    IPrint3DWorkflowPrintRequestedEventArgs(std::nullptr_t = nullptr) noexcept {
    }
    IPrint3DWorkflowPrintRequestedEventArgs(void* ptr,
                                            take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IPrint3DWorkflowPrintRequestedEventArgs(
        IPrint3DWorkflowPrintRequestedEventArgs const&) noexcept = default;
    IPrint3DWorkflowPrintRequestedEventArgs(
        IPrint3DWorkflowPrintRequestedEventArgs&&) noexcept = default;
    IPrint3DWorkflowPrintRequestedEventArgs& operator=(
        IPrint3DWorkflowPrintRequestedEventArgs const&) & noexcept = default;
    IPrint3DWorkflowPrintRequestedEventArgs& operator=(
        IPrint3DWorkflowPrintRequestedEventArgs&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IPrint3DWorkflowPrinterChangedEventArgs
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPrint3DWorkflowPrinterChangedEventArgs> {
    IPrint3DWorkflowPrinterChangedEventArgs(std::nullptr_t = nullptr) noexcept {
    }
    IPrint3DWorkflowPrinterChangedEventArgs(void* ptr,
                                            take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IPrint3DWorkflowPrinterChangedEventArgs(
        IPrint3DWorkflowPrinterChangedEventArgs const&) noexcept = default;
    IPrint3DWorkflowPrinterChangedEventArgs(
        IPrint3DWorkflowPrinterChangedEventArgs&&) noexcept = default;
    IPrint3DWorkflowPrinterChangedEventArgs& operator=(
        IPrint3DWorkflowPrinterChangedEventArgs const&) & noexcept = default;
    IPrint3DWorkflowPrinterChangedEventArgs& operator=(
        IPrint3DWorkflowPrinterChangedEventArgs&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IPrintExtensionContextStatic
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPrintExtensionContextStatic> {
    IPrintExtensionContextStatic(std::nullptr_t = nullptr) noexcept {}
    IPrintExtensionContextStatic(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IPrintExtensionContextStatic(IPrintExtensionContextStatic const&) noexcept =
        default;
    IPrintExtensionContextStatic(IPrintExtensionContextStatic&&) noexcept =
        default;
    IPrintExtensionContextStatic& operator=(
        IPrintExtensionContextStatic const&) & noexcept = default;
    IPrintExtensionContextStatic& operator=(
        IPrintExtensionContextStatic&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IPrintNotificationEventDetails
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPrintNotificationEventDetails> {
    IPrintNotificationEventDetails(std::nullptr_t = nullptr) noexcept {}
    IPrintNotificationEventDetails(void* ptr,
                                   take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IPrintNotificationEventDetails(
        IPrintNotificationEventDetails const&) noexcept = default;
    IPrintNotificationEventDetails(IPrintNotificationEventDetails&&) noexcept =
        default;
    IPrintNotificationEventDetails& operator=(
        IPrintNotificationEventDetails const&) & noexcept = default;
    IPrintNotificationEventDetails& operator=(
        IPrintNotificationEventDetails&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IPrintTaskConfiguration
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPrintTaskConfiguration> {
    IPrintTaskConfiguration(std::nullptr_t = nullptr) noexcept {}
    IPrintTaskConfiguration(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IPrintTaskConfiguration(IPrintTaskConfiguration const&) noexcept = default;
    IPrintTaskConfiguration(IPrintTaskConfiguration&&) noexcept = default;
    IPrintTaskConfiguration& operator=(
        IPrintTaskConfiguration const&) & noexcept = default;
    IPrintTaskConfiguration& operator=(IPrintTaskConfiguration&&) & noexcept =
        default;
  };
  struct __declspec(empty_bases) IPrintTaskConfigurationSaveRequest
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPrintTaskConfigurationSaveRequest> {
    IPrintTaskConfigurationSaveRequest(std::nullptr_t = nullptr) noexcept {}
    IPrintTaskConfigurationSaveRequest(void* ptr,
                                       take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IPrintTaskConfigurationSaveRequest(
        IPrintTaskConfigurationSaveRequest const&) noexcept = default;
    IPrintTaskConfigurationSaveRequest(
        IPrintTaskConfigurationSaveRequest&&) noexcept = default;
    IPrintTaskConfigurationSaveRequest& operator=(
        IPrintTaskConfigurationSaveRequest const&) & noexcept = default;
    IPrintTaskConfigurationSaveRequest& operator=(
        IPrintTaskConfigurationSaveRequest&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IPrintTaskConfigurationSaveRequestedDeferral
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPrintTaskConfigurationSaveRequestedDeferral> {
    IPrintTaskConfigurationSaveRequestedDeferral(
        std::nullptr_t = nullptr) noexcept {}
    IPrintTaskConfigurationSaveRequestedDeferral(
        void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IPrintTaskConfigurationSaveRequestedDeferral(
        IPrintTaskConfigurationSaveRequestedDeferral const&) noexcept = default;
    IPrintTaskConfigurationSaveRequestedDeferral(
        IPrintTaskConfigurationSaveRequestedDeferral&&) noexcept = default;
    IPrintTaskConfigurationSaveRequestedDeferral& operator=(
        IPrintTaskConfigurationSaveRequestedDeferral const&) & noexcept =
        default;
    IPrintTaskConfigurationSaveRequestedDeferral& operator=(
        IPrintTaskConfigurationSaveRequestedDeferral&&) & noexcept = default;
  };
  struct __declspec(empty_bases) IPrintTaskConfigurationSaveRequestedEventArgs
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPrintTaskConfigurationSaveRequestedEventArgs> {
    IPrintTaskConfigurationSaveRequestedEventArgs(
        std::nullptr_t = nullptr) noexcept {}
    IPrintTaskConfigurationSaveRequestedEventArgs(
        void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IPrintTaskConfigurationSaveRequestedEventArgs(
        IPrintTaskConfigurationSaveRequestedEventArgs const&) noexcept =
        default;
    IPrintTaskConfigurationSaveRequestedEventArgs(
        IPrintTaskConfigurationSaveRequestedEventArgs&&) noexcept = default;
    IPrintTaskConfigurationSaveRequestedEventArgs& operator=(
        IPrintTaskConfigurationSaveRequestedEventArgs const&) & noexcept =
        default;
    IPrintTaskConfigurationSaveRequestedEventArgs& operator=(
        IPrintTaskConfigurationSaveRequestedEventArgs&&) & noexcept = default;
  };
}
#endif
