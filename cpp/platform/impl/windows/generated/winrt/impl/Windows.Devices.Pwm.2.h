// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_Devices_Pwm_2_H
#define WINRT_Windows_Devices_Pwm_2_H
#include "winrt/impl/Windows.Devices.Pwm.1.h"
#include "winrt/impl/Windows.Devices.Pwm.Provider.1.h"
#include "winrt/impl/Windows.Foundation.1.h"
WINRT_EXPORT namespace winrt::Windows::Devices::Pwm {
  struct __declspec(empty_bases) PwmController
      : winrt::Windows::Devices::Pwm::IPwmController {
    PwmController(std::nullptr_t) noexcept {}
    PwmController(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Devices::Pwm::IPwmController(
              ptr, take_ownership_from_abi) {}
    PwmController(PwmController const&) noexcept = default;
    PwmController(PwmController&&) noexcept = default;
    PwmController& operator=(PwmController const&) & noexcept = default;
    PwmController& operator=(PwmController&&) & noexcept = default;
    static auto GetControllersAsync(
        winrt::Windows::Devices::Pwm::Provider::IPwmProvider const& provider);
    static auto GetDefaultAsync();
    static auto GetDeviceSelector();
    static auto GetDeviceSelector(param::hstring const& friendlyName);
    static auto FromIdAsync(param::hstring const& deviceId);
  };
  struct __declspec(empty_bases) PwmPin
      : winrt::Windows::Devices::Pwm::IPwmPin {
    PwmPin(std::nullptr_t) noexcept {}
    PwmPin(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Devices::Pwm::IPwmPin(ptr, take_ownership_from_abi) {}
    PwmPin(PwmPin const&) noexcept = default;
    PwmPin(PwmPin&&) noexcept = default;
    PwmPin& operator=(PwmPin const&) & noexcept = default;
    PwmPin& operator=(PwmPin&&) & noexcept = default;
  };
}
#endif
