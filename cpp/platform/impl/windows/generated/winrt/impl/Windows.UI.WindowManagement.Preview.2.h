// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_UI_WindowManagement_Preview_2_H
#define WINRT_Windows_UI_WindowManagement_Preview_2_H
#include "winrt/impl/Windows.Foundation.1.h"
#include "winrt/impl/Windows.UI.WindowManagement.1.h"
#include "winrt/impl/Windows.UI.WindowManagement.Preview.1.h"
WINRT_EXPORT namespace winrt::Windows::UI::WindowManagement::Preview {
  struct __declspec(empty_bases) WindowManagementPreview
      : winrt::Windows::UI::WindowManagement::Preview::
            IWindowManagementPreview {
    WindowManagementPreview(std::nullptr_t) noexcept {}
    WindowManagementPreview(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::UI::WindowManagement::Preview::
              IWindowManagementPreview(ptr, take_ownership_from_abi) {}
    WindowManagementPreview(WindowManagementPreview const&) noexcept = default;
    WindowManagementPreview(WindowManagementPreview&&) noexcept = default;
    WindowManagementPreview& operator=(
        WindowManagementPreview const&) & noexcept = default;
    WindowManagementPreview& operator=(WindowManagementPreview&&) & noexcept =
        default;
    static auto SetPreferredMinSize(
        winrt::Windows::UI::WindowManagement::AppWindow const& window,
        winrt::Windows::Foundation::Size const& preferredFrameMinSize);
  };
}
#endif
