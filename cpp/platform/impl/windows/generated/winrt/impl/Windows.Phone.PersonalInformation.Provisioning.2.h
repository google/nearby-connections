// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_Phone_PersonalInformation_Provisioning_2_H
#define WINRT_Windows_Phone_PersonalInformation_Provisioning_2_H
#include "winrt/impl/Windows.Foundation.1.h"
#include "winrt/impl/Windows.Foundation.Collections.1.h"
#include "winrt/impl/Windows.Phone.PersonalInformation.1.h"
#include "winrt/impl/Windows.Phone.PersonalInformation.Provisioning.1.h"
#include "winrt/impl/Windows.Storage.Streams.1.h"
WINRT_EXPORT namespace winrt::Windows::Phone::PersonalInformation::
    Provisioning {
  struct ContactPartnerProvisioningManager {
    ContactPartnerProvisioningManager() = delete;
    static auto AssociateNetworkAccountAsync(
        winrt::Windows::Phone::PersonalInformation::ContactStore const& store,
        param::hstring const& networkName,
        param::hstring const& networkAccountId);
    static auto ImportVcardToSystemAsync(
        winrt::Windows::Storage::Streams::IInputStream const& stream);
    static auto AssociateSocialNetworkAccountAsync(
        winrt::Windows::Phone::PersonalInformation::ContactStore const& store,
        param::hstring const& networkName,
        param::hstring const& networkAccountId);
  };
  struct MessagePartnerProvisioningManager {
    MessagePartnerProvisioningManager() = delete;
    static auto ImportSmsToSystemAsync(
        bool incoming, bool read, param::hstring const& body,
        param::hstring const& sender,
        param::async_vector_view<hstring> const& recipients,
        winrt::Windows::Foundation::DateTime const& deliveryTime);
    static auto ImportMmsToSystemAsync(
        bool incoming, bool read, param::hstring const& subject,
        param::hstring const& sender,
        param::async_vector_view<hstring> const& recipients,
        winrt::Windows::Foundation::DateTime const& deliveryTime,
        param::async_vector_view<
            winrt::Windows::Foundation::Collections::IMapView<
                hstring, winrt::Windows::Foundation::IInspectable>> const&
            attachments);
  };
}
#endif
