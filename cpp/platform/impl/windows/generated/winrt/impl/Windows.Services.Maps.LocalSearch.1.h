// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT
// v2.0.210505.3

#ifndef WINRT_Windows_Services_Maps_LocalSearch_1_H
#define WINRT_Windows_Services_Maps_LocalSearch_1_H
#include "winrt/impl/Windows.Services.Maps.LocalSearch.0.h"
WINRT_EXPORT namespace winrt::Windows::Services::Maps::LocalSearch {
  struct __declspec(empty_bases) ILocalCategoriesStatics
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILocalCategoriesStatics> {
    ILocalCategoriesStatics(std::nullptr_t = nullptr) noexcept {}
    ILocalCategoriesStatics(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    ILocalCategoriesStatics(ILocalCategoriesStatics const&) noexcept = default;
    ILocalCategoriesStatics(ILocalCategoriesStatics&&) noexcept = default;
    ILocalCategoriesStatics& operator=(
        ILocalCategoriesStatics const&) & noexcept = default;
    ILocalCategoriesStatics& operator=(ILocalCategoriesStatics&&) & noexcept =
        default;
  };
  struct __declspec(empty_bases) ILocalLocation
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILocalLocation> {
    ILocalLocation(std::nullptr_t = nullptr) noexcept {}
    ILocalLocation(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    ILocalLocation(ILocalLocation const&) noexcept = default;
    ILocalLocation(ILocalLocation&&) noexcept = default;
    ILocalLocation& operator=(ILocalLocation const&) & noexcept = default;
    ILocalLocation& operator=(ILocalLocation&&) & noexcept = default;
  };
  struct __declspec(empty_bases) ILocalLocation2
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILocalLocation2> {
    ILocalLocation2(std::nullptr_t = nullptr) noexcept {}
    ILocalLocation2(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    ILocalLocation2(ILocalLocation2 const&) noexcept = default;
    ILocalLocation2(ILocalLocation2&&) noexcept = default;
    ILocalLocation2& operator=(ILocalLocation2 const&) & noexcept = default;
    ILocalLocation2& operator=(ILocalLocation2&&) & noexcept = default;
  };
  struct __declspec(empty_bases) ILocalLocationFinderResult
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILocalLocationFinderResult> {
    ILocalLocationFinderResult(std::nullptr_t = nullptr) noexcept {}
    ILocalLocationFinderResult(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    ILocalLocationFinderResult(ILocalLocationFinderResult const&) noexcept =
        default;
    ILocalLocationFinderResult(ILocalLocationFinderResult&&) noexcept = default;
    ILocalLocationFinderResult& operator=(
        ILocalLocationFinderResult const&) & noexcept = default;
    ILocalLocationFinderResult& operator=(
        ILocalLocationFinderResult&&) & noexcept = default;
  };
  struct __declspec(empty_bases) ILocalLocationFinderStatics
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILocalLocationFinderStatics> {
    ILocalLocationFinderStatics(std::nullptr_t = nullptr) noexcept {}
    ILocalLocationFinderStatics(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    ILocalLocationFinderStatics(ILocalLocationFinderStatics const&) noexcept =
        default;
    ILocalLocationFinderStatics(ILocalLocationFinderStatics&&) noexcept =
        default;
    ILocalLocationFinderStatics& operator=(
        ILocalLocationFinderStatics const&) & noexcept = default;
    ILocalLocationFinderStatics& operator=(
        ILocalLocationFinderStatics&&) & noexcept = default;
  };
  struct __declspec(empty_bases) ILocalLocationHoursOfOperationItem
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILocalLocationHoursOfOperationItem> {
    ILocalLocationHoursOfOperationItem(std::nullptr_t = nullptr) noexcept {}
    ILocalLocationHoursOfOperationItem(void* ptr,
                                       take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    ILocalLocationHoursOfOperationItem(
        ILocalLocationHoursOfOperationItem const&) noexcept = default;
    ILocalLocationHoursOfOperationItem(
        ILocalLocationHoursOfOperationItem&&) noexcept = default;
    ILocalLocationHoursOfOperationItem& operator=(
        ILocalLocationHoursOfOperationItem const&) & noexcept = default;
    ILocalLocationHoursOfOperationItem& operator=(
        ILocalLocationHoursOfOperationItem&&) & noexcept = default;
  };
  struct __declspec(empty_bases) ILocalLocationRatingInfo
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ILocalLocationRatingInfo> {
    ILocalLocationRatingInfo(std::nullptr_t = nullptr) noexcept {}
    ILocalLocationRatingInfo(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    ILocalLocationRatingInfo(ILocalLocationRatingInfo const&) noexcept =
        default;
    ILocalLocationRatingInfo(ILocalLocationRatingInfo&&) noexcept = default;
    ILocalLocationRatingInfo& operator=(
        ILocalLocationRatingInfo const&) & noexcept = default;
    ILocalLocationRatingInfo& operator=(ILocalLocationRatingInfo&&) & noexcept =
        default;
  };
  struct __declspec(empty_bases) IPlaceInfoHelperStatics
      : winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPlaceInfoHelperStatics> {
    IPlaceInfoHelperStatics(std::nullptr_t = nullptr) noexcept {}
    IPlaceInfoHelperStatics(void* ptr, take_ownership_from_abi_t) noexcept
        : winrt::Windows::Foundation::IInspectable(ptr,
                                                   take_ownership_from_abi) {}
    IPlaceInfoHelperStatics(IPlaceInfoHelperStatics const&) noexcept = default;
    IPlaceInfoHelperStatics(IPlaceInfoHelperStatics&&) noexcept = default;
    IPlaceInfoHelperStatics& operator=(
        IPlaceInfoHelperStatics const&) & noexcept = default;
    IPlaceInfoHelperStatics& operator=(IPlaceInfoHelperStatics&&) & noexcept =
        default;
  };
}
#endif
